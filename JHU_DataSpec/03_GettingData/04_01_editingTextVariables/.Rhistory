xt <- xtabs(ncases ~ agegp, data=esoph)
xt
xt <- xtabs(ncases ~ agegp + alcgp, data=esoph)
xt
xt <- xtabs(ncases ~ ., data=esoph)
head(xt)
xt <- xtabs(ncases ~ ., data=esoph)
xt
xt <- xtabs(cbind(ncases,ncontrols) ~ ., data=esoph)
xt
data(UCBAdmissions)
head(UCBAdmissions)
summary(UCBAdmissions)
DF = as.data.frame(UCBAdmissions)
DF[1,]
xt <- xtabs(Freq ~ Gender + Admit,data=DF)
xt
data(UCBAdmissions)
DF = as.data.frame(UCBAdmissions)
summary(DF)
xt <- xtabs(Freq ~ Gender + Admit,data=DF)
xt
summary(xt)
summary(xtabs(Freq ~.,DF))
?xtabs
warpbreaks
warpbreaks$replicate <- rep(1:9, len = 54)
ftable(warpbreaks)
ftable(warpbreaks)
warpbreaks[1,]
warpbreaks <- warpbreaks[,-4]
ftable(warpbreaks)
table(warpbreaks)
?ftable
ftable(Titanic, row.vars = 1:3)
table(Titanic)
Titanic[1,]
dim(Titanic)
xt
names(warpbreaks)
xtab(breaks ~ ., data=warpbreaks)
xtabs(breaks ~ ., data=warpbreaks)
warpbreaks$replicate <- rep(1:9, len = 54)
xtab(breaks ~.,data=warpbreaks)
warpbreaks$replicate <- rep(1:9, len = 54)
xtabs(breaks ~.,data=warpbreaks)
ftable(warpbreaks)
ftable(xt)
warpbreaks$replicate <- rep(1:9, len = 54)
xt = xtabs(breaks ~.,data=warpbreaks)
xt
ftable(xt)
getwd()
setup("gd")
library(makeslides)
setup("gd")
setwd("014summarizingData/")
sf()
bu()
sf()
sf()
rowSums(is.na(restData))
colSums(is.na(restData))
colSums(is.na(restData))
all(colSums(is.na(restData))==0)
str
str(restData)
quantile(restData$zipCode)
names(restData)
quantile(restData$councilDistrict)
?quantile
quantile(restData$councilDistrict,na.rm=TRUE)
quantile(restData$councilDistrict,probs=c(0.5,0.75,0.9))
fakeData = rnorm(1e5)
object.size(fakeDAta)
object.size(fakeData)
fakeData = rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units="Mb")
sf()
getwd()
sf()
bu()
seq(1,10,by=2)
seq(1,10,length=3)
?seq
seq(along(rnorm(5)))
s1 <- seq(1,10,by=2)
s2 <- seq(1,10,length=3)
seq(along = s1)
s1
s1 <- seq(1,10,by=2)
s2 <- seq(1,10,length=3)
x <- c(1,3,8,25,100); seq(along = x)
names(restData)
restData %in% c("21212")
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212","21213"))
table(restData$zipCode %in% c("21212"))
table(restData$zipCode %in% c("21212","21213"))
dim(restData[restData$zipCode %in% c("21212","21213"),])
getwd()
sf()
bu()
sf()
table(restData$neighborhood)
restData$nearMe = restData$neighborhood %in% c("Roland Park", "Homeland")
table(restData$nearMe)
restData$zipCode[1]
restData$highZip = ifelse(restData$zipCode > 21210, TRUE, FALSE)
table(restData$highZip)
table(restData$highZip,restData$zipCode > 21210)
restData$zipGroups = cut(restData$zipCode,breaks=c(21200,21210,21220))
table(restData$zipGroups)
restData$zipGroups = cut(restData$zipCode,breaks=c(21200,21210,21215))
table(restData$zipGroups)
table(restData$zipCode)
restData$zipGroups = cut(restData$zipCode,breaks=c(21206,21218,21230))
table(restData$zipCode)
table(restData$zipGroups)
?cut
cut(restData$zipCode,breaks=c(21206,21218,21230))
restData$zipGroups = cut(restData$zipCode,breaks=c(21206,21218,21230,),include.lowest=TRUE)
restData$zipGroups = cut(restData$zipCode,breaks=c(21206,21218,21230),include.lowest=TRUE)
restData$zipGroups
table(restData$zipGroups)
table(restData$zipCode[is.na(zipData$zipGroups)])
table(restData$zipCode[is.na(restData$zipGroups)])
restData$zipGroups = cut(restData$zipCode,breaks=quantile(restData$zipCode))
table(zipGroups)
table(restData$zipGroups)
restData$zipGroups = cut(restData$zipCode,breaks=quantile(restData$zipCode))
table(restData$zipGroups,restData$zipCode)
library(HMisc)
library(Hmisc)
library(Hmisc)
restData$zipGroups = cut2(restData$zipCode,g=4)
table(restData$zipGroups)
restData$zipWrong = ifelse(restData$zipCode < 0, TRUE, FALSE)
table(restData$zipWrong,restData$zipCode < 0)
fac <- sample(c("yes","no"),size=10,replace=TRUE)
fac
yesno <- sample(c("yes","no"),size=10,replace=TRUE)
yesno
class(yesno)
yesnofac <- factor(yesno)
yesnofac
getwd
setwd("../015creatingNewVariables/")
sf()
bu()
sf()
?factor
yesnofac = factor(yesno,levels=c("yes","no"))
yesnofac
?relevel
relevel(yesnofac,ref="yes")
yesnofac = factor(yesno,levels=c("yes","no"))
relevel(yesnofac,ref="yes")
as.numeric(yesnofac)
class(restData$zipCode)
restData$zcf <- factor(restData$zipCode)
restData$zcf
restData$zcf[1:10]
yesno <- sample(c("yes","no"),size=10,replace=TRUE)
yesno <- sample(c("yes","no"),size=10,replace=TRUE)
yesnofac = factor(yesno,levels=c("yes","no"))
relevel(yesnofac,ref="yes")
as.numeric(yesnofac)
class(restData$zcf)
getwd()
sf()
getwd(
)
setwd("../016reshapingData/")
slidify("index.Rmd")
bu()
slidify("index.Rmd")
sf()
library(reshape2)
french_fries
airquality
recast(french_fries, time ~ variable, id.var = 1:4)
head(french_fries)
ca
dataset <- data.frame(var1 = rep(c("a","b","c","d","e","f"), each = 4),
var2 = rep(c("level1","level1","level2","level2"), 6),
var3 = rep(c("h","m"), 12), meas = rep(1:12))
dataset
head(french_fries)
cast(french_fries,~subject+rep,mean)
library(reshap3)
library(reshape2)
cast(french_fries,~subject+rep,mean)
?cast
dcast(french_fries, ~time + treatment + subject + rep,mean)
melt(french_fries)
dim(melt(french_fries))
?melt
melt(french_fries,id=c("subject","time","treatment","rep"))
df2 <- melt(french_fries,id=c("subject","time","treatment","rep"))
head(df2)
dim(cast(df2,value ~ subject + time + treatment,mean))
dim(dcast(df2,value ~ subject + time + treatment,mean))
table(unique(paste(subject,time,treatment)))
df3 <- dcast(df2,value ~ subject + time + treatment,mean)
df3[1,]
dim(df3)
df3[1,1]
df3[1,1:10]
library(reshape2)
head(french_fries)
head(bnames)
mtcars
t(mtcars)
mtcars[1,]
mtcars[2,]
melt(mtcars)
mm <- melt(mtcars)
mm[1,]
mm[2,]
?melt
mm[1,]
mtcars[1,]
cast(mtcars,mpg ~ gear)
dcast(mtcars,mpg ~ gear)
mtcars[1,]
mtcars$carname <- rownames(mtcars)
mtcars[1,]
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars,id=c("carnames","gear","cyl"))
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"))
head(carMetl)
head(carMelt)
mtcars$carname <- rownames(mtcars)
carMelt <- melt(mtcars,id=c("carname","gear","cyl"),measure.vars=c("mpg","hp"))
carMelt[1,]
head(carMelt)
tail(carMelt)
dcast(carMelt, carname ~ variable,mean)
getwd()
sf()
bu()
rm(mtcars)
sf()
dcast(carMelt, carname ~ variable)
?dcast
dcast(carMelt, carname ~ variable,mean)
dcast(carMelt, carname ~ variable,length)
table(mtcars$hp)
summary(mtcars)
table(mtcars$cyl)
cdset <- dcast(carMelt, cyl ~ variable)
cdset
cylData <- dcast(carMelt, cyl ~ variable)
cylData
cylData <- dcast(carMelt, cyl ~ variable,mean)
cylData
sf()
bu()
rm(mtcars)
ls()
sf()
bu()
dcast(carMelt)
?dcast
ffm <- melt(french_fries, id = 1:4, na.rm = TRUE)
ffm[1,]
head(ffm)
head(french_fries)
tail(ffm)
head(InsectSprays)
dim(InsectSprays)
tapply(count,spray,mean)
tapply(count,spray,mean,data=InsectSprays)
tapply(InsectSprays$count,InsectSprays$spray,mean)
tapply(InsectSprays$count,InsectSprays$spray,sum)
split(InsectSprays$count,InsectSprays$spray)
lapply(spIns,sum)
spIns <- split(InsectSprays$count,InsectSprays$spray)
spIns
lapply(spIns,sum)
sprCount = lapply(spIns,sum)
unlist(sprCount)
sapply(spIns,sum)
?ddply
library(plyr)
?ddply
ddply(InsectSprays,.(spray),summarize,mean.count=mean(count))
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
ave(count, spray)
ddply(InsectSprays,.(spray),summarize,sum=ave(count))
?ave
ddply(InsectSprays,.(spray),summarize,sum=ave(count,sd))
ddply(InsectSprays,.(spray),summarize,sd=ave(count,sd))
ddply(InsectSprays,.(spray),summarize,sum=ave(count,median))
ddply(InsectSprays,.(spray),summarize,sum=ave(count,fun=median))
ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN
=median))
ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sd))
ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sd))
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
head(ddply(InsectSprays,.(spray),summarize,sum=ave(count)))
getwd()
sf()
bu()
head(ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sum)))
ddply(InsectSprays,.(spray),summarize,sum=sum(count))
head(ddply(InsectSprays,.(spray),summarize,sum=ave(count,FUN=sum)))
sf()
sf()
?dcast
?acast
?plyr
sf()
bu()
?summarize
baseball
summarize(baseball,duration=max(year)-min(year),nteams=length(unique(team)))
?mutate
library(Hmisc); library(plyr)
mutate(restData,zipGroups=cut2(zipCode,g=4))
sf()
setwd("../013subsettingAndSorting/")
of()
arrange(X,var1)
set.seed(13435)
X <- data.frame("var1"=sample(1:5),"var2"=sample(6:10),"var3"=sample(11:15))
X <- X[sample(1:5),]; X$var2[c(1,3)] = NA
X
arrange(X,var1)
arrange(X,var1,var3)
arrange(X,var1,var2)
arrange(X,var1,var3)
arrange(X,var1,desc(var3))
arrange(X,var3,var1)
arrange(X,var1)
setwd("../017mergingData/")
?join
join_all
?join_all
?join
getwd()
?by.x
?merge
getwd()
sf()
bu()
reviews
if(!file.exists("./data")){dir.create("./data")}
fileUrl1 <- "https://dl.dropboxusercontent.com/u/7710864/data/reviews-apr29.csv"
fileUrl2 <- "https://dl.dropboxusercontent.com/u/7710864/data/solutions-apr29.csv"
download.file(fileUrl1,destfile="./data/reviews.csv",method="curl")
download.file(fileUrl2,destfile="./data/solutions.csv",method="curl")
reviews <- read.csv("./data/reviews.csv"); solutions <- read.csv("./data/solutions.csv")
head(reviews,2)
head(solutions,2)
names(reviews)
names(solutions)
mergedData <- merge(reviews,solutions,all=TRUE)
head(mergedData)
mergedData2 <- merge(reviews, solutions, by.x = "solution_id", by.y = "id", all=TRUE)
head(mergedData2,)
head(mergedData2)
names(solutions)
mergedData <- merge(reviews,solutions,all=TRUE)
head(mergedData)
names(solutions)
names(reviews)
mergedData <- merge(reviews,solutions,by.x="solution_id",by.y="id",all=TRUE)
head(mergedData)
head(solutions)
head(reviews)
names(reviews)
names(solutions)
mergedData2 <- merge(reviews,solutions,all=TRUE)
head(mergedData2)
length(mergedData2$id)
dim(solutions)
dim(reviews)
?merge
intersect(names(solutions),names(reviews))
?join
first <- ddply(baseball, "id", summarise, first = min(year))
first
first <- ddply(baseball, "id", summarise, first = min(year))
length(first)
first[[1]]
first[[2]]
length(first)
first[1]
first[2]
merge(first,by="id")
join(solutions,reviews,by="id")
join(solutions,reviews)
dim(join(solutions,reviews))
join(solutions,reviews,by="id",merge="full")
join(solutions,reviews,by="id",type="full")
join(solutions,reviews,by="id",type="right")
df1 <- data.frame(id=sample(1:10),x=rnorm(10))
df2 <- data.frame(id=sample(1:10),x=rnorm(10))
head(df1)
head(df2)
system.time(join(df1,df2))
system.time(merge(df1,df2))
df1 <- data.frame(id=sample(1:10),x=rnorm(10))
df2 <- data.frame(id=sample(1:10),x=rnorm(10))
join(df1,df2)
df1 <- data.frame(id=sample(1:10),x=rnorm(10))
df2 <- data.frame(id=sample(1:10),y=rnorm(10))
join(df1,df2)
df1 <- data.frame(id=sample(1:10),x=rnorm(10))
df2 <- data.frame(id=sample(1:10),y=rnorm(10))
arrange(join(df1,df2),id)
df1
for(i in 1:10){df[[i]] = data.frame(id=1:10,paste0("var",i)=rnorm(10)) }
i = 1
paste0("var",i)
df = vector(10,mode="list")
for(i in 1:10){df[[i]] = data.frame(id=1:10,paste0("var",i)=rnorm(10)) }
```
varnames <- paste0("var",1:10)
for(i in 1:10){df[[i]] = data.frame(id=1:10,varnames[i]=rnorm(10)) }
i
data.frame(id=1:10,varnames[i]=rnorm(10))
?data.fame
?data.frame
df1 <- data.frame(id=sample(1:10),x=rnorm(10))
df2 <- data.frame(id=sample(1:10),y=rnorm(10))
df3 <- data.frame(id=sample(1:10),z=rnorm(10))
join_all(df1,df2,df3)
?join_all
df1 = data.frame(id=sample(1:10),x=rnorm(10))
df2 = data.frame(id=sample(1:10),y=rnorm(10))
df3 = data.frame(id=sample(1:10),z=rnorm(10))
dfList = list(df1,df2,df3)
dfList
join_all(dfList)
sf()
bu()
getwd()
setwd("../018")
setwd("../018editingTextVariables/")
of()
mylist[1]
mylist$letters
mylist[[1]]
mylist <- list(letters = c("A", "b", "c"), numbers = 1:3, matrix(1:25, ncol = 5))
head(mylist)
mylist[1]
mylist$letters
mylist[[1]]
reviews[1,]
solutions[1,]
cameraData[1,]
getwd()
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
cameraData <- read.csv("./data/cameras.csv")
names(cameraData)
tolower(names(cameraData))
cameraData[1,]
grep("ALAMEDA",cameraData$intersection)
?grep
grep("Alameda",cameraData$intersection)
grep("Alameda",cameraData$intersection)
table(grepl("Alameda"),cameraData$intersection)
cameraData2 <- cameraData[!grepl("Alameda",cameraData$intersection),]
grep("Alameda",cameraData$intersection)
table(grepl("Alameda",cameraData$intersection))
cameraData2 <- cameraData[!grepl("Alameda",cameraData$intersection),]
getwd()
sf()
bu()
sf()
sf()
sf()
grep("Alameda",cameraData$intersection)
grep("Alameda",cameraData$intersection,value=TRUE)
grep("JeffStreet",cameraData$intersection)
grep("Alameda",cameraData$intersection,value=TRUE)
grep("JeffStreet",cameraData$intersection)
length(grep("JeffStreet",cameraData$intersection))
install.packages('stringr')
install.packages('stringr')
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringer")
install.packages("stringr")
install.packages("stringr")
library(stringr)
fruit <- c("apple", "banana", "pear", "pineapple")
str_count(fruit, "a")
library(stringr)
nchar("jeff")
substr("Jeffrey Leek",1,7)
paste("Jeffrey","Leek")
library(stringr)
nchar("jeff")
substr("Jeffrey Leek",1,7)
paste("Jeffrey","Leek")
paste0("Jeffrey","Leek")
str_trim("Jeffrey Leek")
getwd()
sf()
library(makeslides)
sf()
