unemp + geom_vline(aes(xintercept = start), data = presidential)
presidential <- presidential[-(1:3), ]
yrng <- range(economics$unemploy)
xrng <- range(economics$date)
unemp + geom_vline(aes(xintercept = as.numeric(start)), data = presidential)
presidential
library(scales)
example(geom_rect)
presidential
unemp + geom_rect(aes(NULL, NULL, xmin = start, xmax = end,
fill = party), ymin = yrng[1], ymax = yrng[2],
data = presidential) + scale_fill_manual(values =
alpha(c("blue", "red"), 0.2))
geom_rect(xmin=1,xmax=3,ymin=1,ymax=3)
geom_rect(aes(NULL,NULL), xmin=1,xmax=3,ymin=1,ymax=3)
plot(geom_rect(aes(NULL,NULL), xmin=1,xmax=3,ymin=1,ymax=3))
unemp +  geom_rect(aes(NULL,NULL), xmin=1,xmax=3,ymin=1,ymax=3)
ggplot(aes()) +  geom_rect(aes(NULL,NULL), xmin=1,xmax=3,ymin=1,ymax=3)
ggplot(economics) +  geom_rect(aes(NULL,NULL), xmin=1,xmax=3,ymin=1,ymax=3)
ggplot(economics,aes(NULL,NULL)) +  geom_rect(aes(NULL,NULL), xmin=1,xmax=3,ymin=1,ymax=3)
unemp + geom_rect(aes(NULL, NULL, xmin = start, xmax = end,
fill = party), ymin = yrng[1], ymax = yrng[2],
data = presidential) + scale_fill_manual(values =
alpha(c("blue", "red"), 0.2))
last_plot() + geom_text(aes(x = start, y = yrng[1], label = name),
data = presidential, size = 3, hjust = 0, vjust = 0)
ggplot(economics,aes(NULL,NULL)) +  geom_rect(aes(NULL,NULL), xmin=1,xmax=3,ymin=1,ymax=3)
yrng
last_plot() + geom_text(aes(x = start, y = yrng[1], label = name),
data = presidential, size = 3)
unemp + geom_rect(aes(NULL, NULL, xmin = start, xmax = end,
fill = party), ymin = yrng[1], ymax = yrng[2],
data = presidential) + scale_fill_manual(values =
alpha(c("blue", "red"), 0.2))
last_plot() + geom_text(aes(x = start, y = yrng[1], label = name),
data = presidential, size = 3)
last_plot() + geom_text(aes(x = start, y = yrng[1], label = name),
data = presidential, size = 3, hjust = 0, vjust = 0)
last_plot() + geom_text(aes(x = start, y = yrng[0], label = name),
data = presidential, size = 3, hjust = 0, vjust = 0)
last_plot() + geom_text(aes(x = start, y = yrng[1], label = name),
data = presidential, size = 3, hjust = 0, vjust = 0)
caption <- paste(strwrap("Unemployment rates in the US have
varied a lot over the years", 40), collapse="\n")
caption
c = "Unemployment rates in the US have\nvaried a lot over the years"
c
caption
unemp + geom_text(aes(x, y, label = caption),
data = data.frame(x = xrng[2], y = yrng[2]),
hjust = 1, vjust = 1, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = xrng[2], y = yrng[2]),
hjust = 1, vjust = 1, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = xrng[2], y = yrng[2]),
size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = xrng[2], y = yrng[2]),
hjust = 1, vjust = 1, size = 4)
?hjust
??hjust
?geom_text
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = xrng[2], y = yrng[2]),
hjust = 0, vjust = 0, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = 1990, y = 7500),
hjust = 0, vjust = 0, size = 4)
xrng
yrng
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = "1990-01-01", y = 7500),
hjust = 0, vjust = 0, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = as.Date("1990-01-01"), y = 7500),
hjust = 0, vjust = 0, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = as.Date("1990-01-01"), y = 7500),
hjust = 0, vjust = 1, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = as.Date("1990-01-01"), y = 7500),
hjust = 0, vjust = 2, size = 4)
hjust = 0, vjust = 0, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = as.Date("1990-01-01"), y = 7500),
hjust = 0, vjust = 0, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = as.Date("1990-01-01"), y = 7500),
hjust = 0, vjust = 1, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = as.Date("1990-01-01"), y = 7500),
hjust = 0, vjust = -1, size = 4)
unemp + geom_text(aes(x, y, label = c),
data = data.frame(x = as.Date("1990-01-01"), y = 7500),
hjust = 1, vjust = -1, size = 4)
highest <- subset(economics, unemploy == max(unemploy))
summarise(unemp)
summary(unemp)
unemp + geom_point(data = highest,
size = 3, colour = alpha("red", 0.5))
highest
unemp + geom_point(data = highest,
size = 3, colour = alpha("red", 1))
qplot(percwhite, percbelowpoverty, data = midwest)
qplot(percwhite, percbelowpoverty, data = midwest,
size = poptotal / 1e6) + scale_area("Population\n(millions)",
breaks = c(0.5, 1, 2, 4))
qplot(percwhite, percbelowpoverty, data = midwest,
size = poptotal / 1e6) + scale_size_area("Population\n(millions)",
breaks = c(0.5, 1, 2, 4))
qplot(percwhite, percbelowpoverty, data = midwest,
size = poptotal / 1e6)
qplot(percwhite, percbelowpoverty, data = midwest,
size = poptotal / 1e6) + scale_size_area("Population\n(millions)",
breaks = c(0.5, 1, 2, 4,6))
qplot(percwhite, percbelowpoverty, data = midwest,
size = poptotal / 1e6) + scale_size_area("Population\n(millions)",
breaks = c(0.5, 1, 2, 5))
qplot(percwhite, percbelowpoverty, data = midwest,
size = poptotal / 1e6) + scale_size_area("Population\n(millions)",
breaks = c(0.5, 1, 2, 4))
qplot(percwhite, percbelowpoverty, data = midwest,
size = poptotal / 1e6)
qplot(percwhite, percbelowpoverty, data = midwest,
size = poptotal / 1e6) + scale_size_area("Population\n(millions)",
breaks = c(0.5, 1, 2, 4,6))
qplot(percwhite, percbelowpoverty, data = midwest, size = area) +
scale_size_area()
qplot(percwhite, percbelowpoverty, data = midwest, size = area)
lm_smooth <- geom_smooth(method = lm, size = 1)
qplot(percwhite, percbelowpoverty, data = midwest) + lm_smooth
qplot(percwhite, percbelowpoverty, data = midwest,
weight = popdensity, size = popdensity) + lm_smooth
qplot(percbelowpoverty, data = midwest, binwidth = 1)
qplot(percbelowpoverty, data = midwest, weight = poptotal,
binwidth = 1) + ylab("population")
names(mtcars)
p = ggplot(mtcars,aes(mpg,disp))
p + geom_point()
p + geom_point() + facet_grid(cyl~.)
geom_point
?geom_point
p + geom_point() +stat_smooth()
p + geom_point() +stat_abline()
p + geom_point()
p = ggplot(mpg,aes(cty,hwy,color=factor(year)))
p + geom_point()
p + geom_point() + stat_smooth()
p + geom_point() + geom_point(color=NULL)
p + geom_point() + geom_point(color=1)
p + geom_point() + stat_smooth()
p + geom_point() + stat_smooth() + stat_smooth(aes(color=NULL))
p + geom_point() + stat_smooth() + stat_smooth(aes(color=NULL),size=5)
p + geom_point() + stat_smooth() + stat_smooth(aes(color=NULL))
p  =ggplot(mtcars,aes(x=class))
p + geom_bar()
p  =ggplot(mpg,aes(x=class))
p + geom_bar()
summary(p + geom_bar())
example(reorder)
plot <- qplot(cty, hwy, data = mpg)
plot
# This doesn't work because there is a mismatch between the
# variable type and the default scale
plot + aes(x = drv)
plot + aes(x = drv) + scale_x_discrete()
p <- qplot(sleep_total, sleep_cycle, data = msleep, colour = vore)
p
# Explicitly add the default scale
p + scale_colour_hue()
# Adjust parameters of the default, here changing the appearance
# of the legend
p + scale_colour_hue("What does\nit eat?",
breaks = c("herbi", "carni", "omni", NA),
labels = c("plants", "meat", "both", "don't know"))
p + scale_colour_brewer(pal = "Set1")
p + scale_colour_brewer(palette = "Set1")
table(msleep$vore)
class(msleep$vore)
levels(msleep$vore)
ordered(msleep$vore)
(msleep$vore)
?scale_color_hue
p
p  + discrete_scale()
p <- qplot(cty, hwy, data = mpg, colour = displ)
p
p + scale_x_continuous("City mpg")
p + xlab("City mpg")
p + ylab("Highway mpg")
p + labs(x = "City mpg", y = "Highway", colour = "Displacement")
p + xlab(expression(frac(miles, gallon)))
p <- qplot(cyl, wt, data = mtcars)
p
p + scale_x_continuous(breaks = c(5.5, 6.5))
p + scale_x_continuous(limits = c(5.5, 6.5))
p <- qplot(wt, cyl, data = mtcars, colour = cyl)
p
p + scale_colour_gradient(breaks = c(5.5, 6.5))
p + scale_colour_gradient(limits = c(5.5, 6.5))
scale_color_brewer
scale_color_brewer()
qplot(log10(carat), log10(price), data = diamonds)
qplot(carat, price, data = diamonds) +
scale_x_log10() + scale_y_log10()
plot <- qplot(date, psavert, data = economics, geom = "line") +
ylab("Personal savings rate") +
geom_hline(xintercept = 0, colour = "grey50")
plot
?geom_hline
plot <- qplot(date, psavert, data = economics, geom = "line") +
ylab("Personal savings rate") +
geom_hline(yintercept = 0, colour = "red")
plot
plot + scale_x_date(major = "10 years")
plot + scale_x_date(breaks=date_breaks("15 years"))
plot + scale_x_date(
limits = as.Date(c("2004-01-01", "2005-01-01")),
labels = date_format("%Y-%m-%d")
)
library(vcd)
fill_gradn <- function(pal) {
scale_fill_gradientn(colours = pal(7), limits = c(0, 0.04))
}
erupt + fill_gradn(rainbow_hcl)
f2d <- with(faithful, MASS::kde2d(eruptions, waiting,
h = c(1, 10), n = 50))
df <- with(f2d, cbind(expand.grid(x, y), as.vector(z)))
names(df) <- c("eruptions", "waiting", "density")
erupt <- ggplot(df, aes(waiting, eruptions, fill = density)) +
geom_tile() +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
erupt + scale_fill_gradient(limits = c(0, 0.04))
erupt + scale_fill_gradient(limits = c(0, 0.04),
low = "white", high = "black")
erupt + scale_fill_gradient2(limits = c(-0.04, 0.04),
midpoint = mean(df$density))
f2d <- with(faithful, MASS::kde2d(eruptions, waiting,
h = c(1, 10), n = 50))
f2d
head(f2d)
df <- with(f2d, cbind(expand.grid(x, y), as.vector(z)))
names(df) <- c("eruptions", "waiting", "density")
head(df)
erupt <- ggplot(df, aes(waiting, eruptions, fill = density)) +
geom_tile() +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0))
erupt <- ggplot(df, aes(waiting, eruptions, fill = density)) +
geom_tile() )
erupt <- ggplot(df, aes(waiting, eruptions, fill = density)) +
geom_tile()
erupt + scale_fill_gradient(limits = c(0, 0.04))
erupt + scale_fill_gradient(limits = c(0, 0.04),
low = "white", high = "black")
erupt + scale_fill_gradient2(limits = c(-0.04, 0.04),
midpoint = mean(df$density))
library(vcd)
fill_gradn <- function(pal) {
scale_fill_gradientn(colours = pal(7), limits = c(0, 0.04))
}
erupt + fill_gradn(rainbow_hcl)
erupt + fill_gradn(diverge_hcl)
erupt + fill_gradn(heat_hcl)
fill_gradn <- function(pal) {
scale_fill_gradientn(colours = pal(7), limits = c(0, 0.04))
}
erupt + fill_gradn(rainbow_hcl)
point <- qplot(brainwt, bodywt, data = msleep, log = "xy",
colour = vore)
area <- qplot(log10(brainwt), data = msleep, fill = vore,
binwidth = 1)
point + scale_colour_brewer(pal = "Set1")
point + scale_colour_brewer(palette = "Set1")
point + scale_colour_brewer(palette = "Set2")
point + scale_colour_brewer(palette = "Pastel1")
point + scale_colour_brewer(palette = "Dark2")
point + scale_colour_brewer(palette = "Set1")
point + scale_colour_brewer(palette = "Pastel1")
area + scale_fill_brewer(palette = "Set1")
area + scale_fill_brewer(palette = "Set2")
area + scale_fill_brewer(palette = "Pastel1")
plot <- qplot(brainwt, bodywt, data = msleep, log = "xy")
plot + aes(colour = vore) +
scale_colour_manual(value = c("red", "orange", "yellow",
"green", "blue"))
plot + aes(colour = vore) +
scale_colour_manual(values = c("red", "orange", "yellow",
"green", "blue"))
plot + aes(colour = vore)
plot + aes(colour = vore) +
scale_colour_manual(values = c("red", "orange", "yellow",
"green", "blue"))
colours <- c(carni = "red", "NA" = "orange", insecti = "yellow",
herbi = "green", omni = "blue")
plot + aes(colour = vore) + scale_colour_manual(value = colours)
plot + aes(colour = vore) + scale_colour_manual(values = colours)
plot + aes(shape = vore) +
scale_shape_manual(value = c(1, 2, 6, 0, 23))
plot + aes(shape = vore) +
scale_shape_manual(values = c(1, 2, 6, 0, 23))
huron <- data.frame(year = 1875:1972, level = LakeHuron)
ggplot(huron, aes(year)) +
geom_line(aes(y = level - 5), colour = "blue") +
geom_line(aes(y = level + 5), colour = "red")
ggplot(huron, aes(year)) +
geom_line(aes(y = level - 5, colour = "below")) +
geom_line(aes(y = level + 5, colour = "above"))
ggplot(huron, aes(year)) +
geom_line(aes(y = level - 5, colour = "below")) +
geom_line(aes(y = level + 5, colour = "above")) +
scale_colour_manual("Direction",
c("below" = "blue", "above" = "red"))
ggplot(huron, aes(year)) +
geom_line(aes(y = level - 5, colour = "below")) +
geom_line(aes(y = level + 5, colour = "above")) +
scale_colour_manual("Direction",
values=c("below" = "blue", "above" = "red"))
ggplot(huron, aes(year)) +
geom_line(aes(y = level - 5, colour = "below")) +
geom_line(aes(y = level + 5, colour = "above"))
p <- ggplot(diamonds[1:100, ], aes(price, carat, colour = cut)) +
opts(keep = "legend_box")
mpg2 <- subset(mpg, cyl != 5 & drv %in% c("4", "f"))
mpg$drv
qplot(cty, hwy, data = mpg2) + facet_grid(. ~ cyl)
qplot(cty, data = mpg2, geom="histogram", binwidth = 2) +
facet_grid(cyl ~ .)
qplot(cty, hwy, data = mpg2) + facet_grid(drv ~ cyl)
p <- qplot(displ, hwy, data = mpg2) +
geom_smooth(method = "lm", se = F)
p + facet_grid(cyl ~ drv)
p + facet_grid(cyl ~ drv, margins = T)
qplot(displ, hwy, data = mpg2) +
geom_smooth(aes(colour = drv), method = "lm", se = F) +
facet_grid(cyl ~ drv, margins = T)
movies$decade <- round_any(movies$year, 10, floor)
qplot(rating, ..density.., data=subset(movies, decade > 1890),
geom="histogram", binwidth = 0.5) +
facet_wrap(~ decade, ncol = 6)
p <- qplot(cty, hwy, data = mpg)
p
p + facet_wrap(~ cyl)
p + facet_wrap(~ cyl, scales = "free")
em <- melt(economics, id = "date")
library(reshape2)
head(economics)
head(melt(economics,id="date"))
em <- melt(economics, id = "date")
table(em$variable)
qplot(date, value, data = em, geom = "line", group = variable) +
facet_grid(variable ~ ., scale = "free_y")
qplot(date, value, data = em, geom = "line") +
facet_grid(variable ~ ., scale = "free_y")
mpg3 <- within(mpg2, {
model <- reorder(model, cty)
manufacturer <- reorder(manufacturer, -cty)
})
head(mpg3)
reorder(model, cty)
reorder(mpg2$model, mpg2$cty)
models <- qplot(cty, model, data = mpg3)
models
models + facet_grid(manufacturer ~ ., scales = "free",
space = "free") +  opts(strip.text.y = theme_text())
models + facet_grid(manufacturer ~ ., scales = "free",
space = "free") +  theme(strip.text.y = theme_text())
models + facet_grid(manufacturer ~ ., scales = "free",
space = "free") +  theme(strip.text.y = element_text())
example(reorder)
?reorder
d = data.frame(x=c("a","a","b","b","c","c"),y=(5,3,7,0,9,1))
d = data.frame(x=c("a","a","b","b","c","c"),y=c(5,3,7,0,9,1))
d
reorder(x,y)
x
reorder(d$x,d$y)
reorder(d$x,d$y)
c = reorder(d$x,d$y)
c
c[1]
c[3]
c[4]
d
models <- qplot(cty, model, data = mpg3)
models
models + facet_grid(manufacturer ~ ., scales = "free",
space = "free") +  theme(strip.text.y = element_text())
models + facet_grid(manufacturer ~ .)
models + facet_grid(manufacturer ~ .)+theme(strip.text.y = element_text())
models + facet_grid(manufacturer ~ .,scales = "free")+theme(strip.text.y = element_text())
xmaj <- c(0.3, 0.5, 1,3, 5)
xmin <- as.vector(outer(1:10, 10^c(-1, 0)))
ymaj <- c(500, 1000, 5000, 10000)
ymin <- as.vector(outer(1:10, 10^c(2,3,4)))
dplot <- ggplot(subset(diamonds, color %in% c("D","E","G","J")),
aes(carat, price, colour = color)) +
scale_x_log10(breaks = xmaj, labels = xmaj, minor = xmin) +
scale_y_log10(breaks = ymaj, labels = ymaj, minor = ymin) +
scale_colour_hue(limits = levels(diamonds$color)) +
opts(legend.position = "none")
dplot <- ggplot(subset(diamonds, color %in% c("D","E","G","J")),
aes(carat, price, colour = color)) +
scale_x_log10(breaks = xmaj, labels = xmaj, minor = xmin) +
scale_y_log10(breaks = ymaj, labels = ymaj, minor = ymin) +
scale_colour_hue(limits = levels(diamonds$color)) +
theme(legend.position = "none")
dplot + geom_point()
dplot + geom_point() + facet_grid(. ~ color)
dplot + geom_smooth(method = lm, se = F, fullrange = T)
dplot + geom_smooth(method = lm, se = F, fullrange = T) +
facet_grid(. ~ color)
qplot(color, data=diamonds, geom = "bar", fill = cut,
position="dodge")
qplot(cut, data = diamonds, geom = "bar", fill = cut) +
facet_grid(. ~ color) +
opts(axis.text.x = theme_text(angle = 90, hjust = 1, size = 8,
colour = "grey50"))
mpg4 <- subset(mpg, manufacturer %in%
c("audi", "volkswagen", "jeep"))
mpg4$manufacturer <- as.character(mpg4$manufacturer)
mpg4$model <- as.character(mpg4$model)
base <- ggplot(mpg4, aes(fill = model)) +
geom_bar(position = "dodge") +
opts(legend.position = "none")
base <- ggplot(mpg4, aes(fill = model)) +
geom_bar(position = "dodge") +
theme(legend.position = "none")
base + aes(x = model) +
facet_grid(. ~ manufacturer)
last_plot() +
facet_grid(. ~ manufacturer, scales = "free_x", space = "free")
base + aes(x = manufacturer)
mpg2$disp_ww <- cut_interval(mpg2$displ, length = 1)
qplot(rating, data = movies, binwidth = 1)
last_plot() + theme_bw()
getwd()
library(ggplot2)
R.home(component = "home")
path.expand("~")
library(ggplot2)
cat("ss")
library(plotly)
set.seed(100)
d <- diamonds[sample(nrow(diamonds), 1000), ]
plot_ly(d, x = carat, y = price, text = paste("Clarity: ", clarity),
mode = "markers", color = carat, size = carat)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(rCharts)
install.packages("rCharts")
library(rCharts)
install_github('ramnathv/rCharts')
devtools::install_github('ramnathv/rCharts')
library(rCharts)
dTable(airquality, sPaginationType = "full_numbers")
d <- data.frame(airquality, stringsAsFactors = FALSE) print(d)
x1 = c(1,1,3,1,-1,1)
x2 = c(0,4,0,-1,3,-2)
x1-x2
x3 = c(0,0,-8,-3,3,-2)
x1-1/4*x2+3/8*x3
x2/4
-x3/8
z
library(ggplot2)
attac
attach(mtcars)
names(mtcars)
lm(mpg~cyl)
ggplot(mtcarsaes(x=mpg,y=disp)) + geom_smooth()
ggplot(mtcars,aes(x=mpg,y=disp)) + geom_smooth()
ggplot(mtcars,aes(x=mpg,y=disp)) + geom_smooth() + geom_point()
9.2/sqrt(30)
qnorm(0.01)
2.33*300/40
17.475^2
(30.69-32)*6/4.31
pnorm(-1.82)
m = 30.69
qnorm(0.05)
z = 1.644
q = z*4.31/sqrt(36)
q
m+q
m-q
load("~/Documents/GitHub_Project/MoocCourses/Duke_DASI/gss.Rdata")
setwd("~/Documents/GitHub_Project/MoocCourses/Duke_DASI")
ls()
dim(gss)
names(gss)
sex = gss$sex
att = gss$coneduc
table(sex,att)
mosaicplot(table(sex,att))
d = data.frame(sex=sex,att=att)
head(d)
sum(is.na(att))
d = subset(d,(!is.na(d$sex) )& (! is.na(d$att)))
head(d)
d
head(d,200)
